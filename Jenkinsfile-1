pipeline {
    agent any


    parameters {
        string(name: 'headers_name',
           defaultValue: 'Lior',
           description: 'Header secret to send to Ansible')
        
  }

    stages {
        stage('Add Key to Vault') {
            steps {
                // "vault-key-new" is your Jenkins credential ID. 
                // Jenkins loads it into the environment var VAULT_TOKEN.
                withCredentials([string(credentialsId: 'vault-key-new', variable: 'VAULT_TOKEN')]) {
                    sh """
                        curl --header "X-Vault-Token: $VAULT_TOKEN" \
                             --header "Content-Type: application/json" \
                             --request POST \
                             --data '{"data": {"nginx-port": "6789"}}' \
                             http://vault:8200/v1/kv/data/nginx-secrets
                    """
                }
            }
        }

        stage('Read Vault Secret') {
            steps {
                withCredentials([string(credentialsId: 'vault-key-new', variable: 'VAULT_TOKEN')]) {
                    // Pull the JSON from Vault into a local file
                    sh """
                        curl --silent --header "X-Vault-Token: $VAULT_TOKEN" \
                             --request GET \
                             http://vault:8200/v1/kv/data/nginx-secrets > nginx-secrets.json
                        
                    """
                }

                script {
                    // read json file from vault secret
                    def json = readJSON file: 'nginx-secrets.json'
                    def secretPort = json.data.data["nginx-port"]

                    // take header secret from jenkins params
                    def headerSecret = params.headers_name
                
                    // set the env to pass to ansible
                    env.NGINX_PORT_SECRET = secretPort
                    env.NGINX_HEADERS_SECRET = headerSecret
                    // set the jenkins build number from jenkins defualt variable
                    env.JENKINS_BUILD_NUMBER = "${BUILD_NUMBER}"
                }
            }
        }

        stage('show ansible ver'){
            steps{
                sh """
                    ansible --version
                    ansible-playbook --version
                    ansible-galaxy --version
                    
                """
            }
        }
        // use this folder file option to pass the vars to your ansible folder roles/nginx/vars/main.yml 
        stage('Generate Ansible vars file') {
            steps {
                 script {
            sh """
                # ensure the role's vars directory exists
                mkdir -p roles/nginx/vars

                # write out the vars file
                cat > roles/nginx/vars/main.yml <<EOF
---
nginx_port: ${NGINX_PORT_SECRET}
headers_name: ${NGINX_HEADERS_SECRET}
jenkins_build_number: ${JENKINS_BUILD_NUMBER}
EOF

                echo "Wrote roles/nginx/vars/main.yml"
            """
        }
    }
}
        stage('use ansible playbook'){
            steps{
                sh """
                    ansible-playbook -i inventory.ini playbook.yml 
                """
            }
        }
        // Uncomment the following stage if you want to use extra vars directly in the ansible-playbook command
        // stage('use ansible playbook with extra vars'){
        //     steps{
        //         sh """
        //             ansible-playbook -i inventory.ini playbook.yml \
        //                 --extra-vars "nginx_port=${NGINX_PORT_SECRET} headers_name=${NGINX_HEADERS_SECRET} jenkins_build_number=${JENKINS_BUILD_NUMBER}"
        //         """
        //     }
        // }
        
    }
}
